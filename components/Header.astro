---

import Account from "./Account.astro";
import Dropdown, { type Props as DropdownProps } from "./Dropdown.astro";
import DropdownItem, { type Props as DropdownItemProps } from "./DropdownItem.astro";

type HeaderLink = {
    type: "link";
    label: string;
    href: string;
    external?: boolean;
}
type HeaderDropdown = DropdownProps & {
    type: "dropdown";
    items: DropdownItemProps[];
}

type HeaderItem = HeaderLink | HeaderDropdown;

export interface Props {
    title: string;
    items: HeaderItem[];
}
const { title, items } = Astro.props as Props;

---

<header>
    <h1>{title}</h1>
    <nav>
        <ul>
            {items.map(item => {
                if (item.type === "link") {
                    return <li class="nav-item">
                        <a class="nav-link" href={item.href} target={item.external ? "_blank" : undefined}>
                            <span>{item.label}</span>
                            {item.external && <i class="bx bx-link-external" aria-label="External link"></i>}
                        </a>
                    </li>
                } else if (item.type === "dropdown") {
                    return <li class="nav-item">
                        <Dropdown id={item.id} label={item.label} label_type={item.label_type} label_class="nav-link">
                            {item.items.map(x => {
                                return <DropdownItem {...x} />
                            })}
                        </Dropdown>
                    </li>
                }
            })}
        </ul>
    </nav>
    <div>
        <Account />
    </div>
</header>

<style>
    header {
        background: var(--bc-clr-bg-footer);
        padding: 1rem 2rem;
        display: flex;
    }
    h1 {
        font-weight: 900;
        font-family: var(--bc-ff-heading);
        font-size: var(--bc-fs-900);
        color: var(--bc-clr-primary-400);
    }
    nav {
        margin-inline: auto 2rem;
        display: flex;
        gap: 2rem;
    }
    nav :global(.nav-link) {
        text-decoration: none;
        font-size: var(--bc-fs-500);
        font-weight: 500;
        color: var(--bc-clr-primary-200);
        transition: .3s;
        cursor: pointer;
    }
    nav :global(.nav-link:is(:hover, :focus-visible)) {
        text-decoration: underline;
        color: var(--bc-clr-primary-400);
    }

    @media (min-width: 700px) {
        header {
            align-items: center;
        }
        .nav-mobile-toggle {
            display: none;
        }
    }
    @media (max-width: 700px) {
        header {
            position: relative;
            display: grid;
            grid-template-areas: "toggle title account" "nav nav nav";
            grid-template-columns: auto 1fr auto;
        }
        header:not([data-expanded="true"]) {
            align-items: center;
        }
        h1 {
            margin: 0;
            position: absolute;
            inset: 50% 50% auto auto;
            transform: translate(50%, -50%);
            grid-area: title;
            width: 100%;
            line-height: 0;
            text-align: center;
            transition: .3s;
        }
        header:where([data-expanded="true"]) h1 {
            translate: 0 -100rem;
        }
        .primary-nav {
            margin: 0 2rem;
            height: 0;
            overflow: hidden;
            transition: .3s;
        }
        .nav-list {
            margin: 0;
            display: flex;
            flex-wrap: wrap;
        }
        .nav-item {
            flex: 1;
        }
        .nav-list :global(.dropdown-menu) {
            all: revert;
            padding-left: 1rem;
        }
        .nav-list :global(.dropdown-item):is(:hover, :focus-visible) {
            background: transparent;
            color: var(--bc-clr-text-100);
        }
        .nav-list :global(.dropdown-item) {
            padding: 0;
            width: fit-content;
            font-weight: 400;
            color: var(--bc-clr-text-200);
        }
        nav :global(.nav-link[onclick]) {
            pointer-events: none;
            font-weight: 700;
        }
        nav :global(.nav-link i) {
            display: none;
        }
    }
    @media (max-width: 450px) {
        h1 {
            display: none;
        }
    }
</style>